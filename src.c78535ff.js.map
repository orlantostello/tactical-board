{"version":3,"sources":["js/board-creation.js","js/drag-n-drop.js","index.js"],"names":["board","document","querySelector","SQUARES_NUMBER","i","square","createElement","classList","add","setAttribute","append","dragItems","querySelectorAll","dropZones","draggedItem","droppedItem","handlerDragstart","e","handlerDragend","remove","handlerDrag","handlerDragenter","preventDefault","handlerDragleave","handlerDragover","handlerDrop","parentElement","children","Array","from","indexOf","insertBefore","nextElementSibling","forEach","dragItem","addEventListener","dropZone"],"mappings":";;;AAAA,MAAMA,EAAQC,SAASC,cAAc,UAE/BC,EAAiB,IAEvB,IAAK,IAAIC,EAAI,EAAGA,EAFO,IAEaA,GAAK,EAAG,CACpCC,MAAAA,EAASJ,SAASK,cAAc,OAEtCD,EAAOE,UAAUC,IAAI,SAAU,YAC/BH,EAAOI,aAAa,eAAgB,EAAIL,KAExCJ,EAAMU,OAAOL;;ACRf,MAAMM,EAAYV,SAASW,iBAAiB,aACtCC,EAAYZ,SAASW,iBAAiB,aAC5C,IAAIE,EAAc,KAEdC,EAAc,KAyBlB,SAASC,EAAiBC,GAEnBV,KAAAA,UAAUC,IAAI,oBACnBM,EAAc,KAGhB,SAASI,EAAeD,GACjBV,KAAAA,UAAUY,OAAO,oBACtBL,EAAc,KAGhB,SAASM,EAAYH,IAIrB,SAASI,EAAiBJ,GACxBA,EAAEK,iBACGf,KAAAA,UAAUC,IAAI,oBAIrB,SAASe,EAAiBN,GACnBV,KAAAA,UAAUY,OAAO,oBAIxB,SAASK,EAAgBP,GACvBA,EAAEK,iBAGJ,SAASG,EAAYR,GAIfF,GAAAA,EACEA,GAAAA,EAAYW,gBAAkBZ,EAAYY,cAAe,CACrDC,MAAAA,EAAWC,MAAMC,KAAKd,EAAYW,cAAcC,UACjCA,EAASG,QAAQhB,GACjBa,EAASG,QAAQf,GAGpCD,EAAYY,cAAcK,aAAajB,EAAaC,GAEpDD,EAAYY,cAAcK,aAAajB,EAAaC,EAAYiB,yBAG7DD,KAAAA,aAAajB,EAAaC,QAG5BL,KAAAA,OAAOI,GAxEhBH,EAAUsB,QAAQC,IAChBA,EAASC,iBAAiB,YAAanB,GACvCkB,EAASC,iBAAiB,UAAWjB,GACrCgB,EAASC,iBAAiB,OAAQf,GAElCc,EAASC,iBAAiB,YAAa,KACjCrB,IAAgBC,IAClBA,EAAcmB,KAIlBA,EAASC,iBAAiB,YAAa,KACrCpB,EAAc,SAIlBF,EAAUoB,QAAQG,IAChBA,EAASD,iBAAiB,YAAad,GACvCe,EAASD,iBAAiB,YAAaZ,GACvCa,EAASD,iBAAiB,WAAYX,GACtCY,EAASD,iBAAiB,OAAQV;;AC1BpC,aAFA,QAAA,oBACA,QAAA,0BACA,QAAA","file":"src.c78535ff.js","sourceRoot":"../src","sourcesContent":["const board = document.querySelector('#board');\n// const SQUARES_NUMBER = 736;\nconst SQUARES_NUMBER = 468;\n\nfor (let i = 0; i < SQUARES_NUMBER; i += 1) {\n  const square = document.createElement('div');\n\n  square.classList.add('square', 'dropZone');\n  square.setAttribute('data-zone', `${4 + i}`);\n\n  board.append(square);\n  // console.log(square.attributes);\n}\n\n// const squaretest = document.querySelector('.square');\n","// =======================================\n\nconst dragItems = document.querySelectorAll('.dragItem');\nconst dropZones = document.querySelectorAll('.dropZone');\nlet draggedItem = null;\n// let droppeZone = null;\nlet droppedItem = null;\n\ndragItems.forEach(dragItem => {\n  dragItem.addEventListener('dragstart', handlerDragstart);\n  dragItem.addEventListener('dragend', handlerDragend);\n  dragItem.addEventListener('drag', handlerDrag);\n\n  dragItem.addEventListener('dragenter', () => {\n    if (draggedItem !== droppedItem) {\n      droppedItem = dragItem;\n    }\n  });\n\n  dragItem.addEventListener('dragleave', () => {\n    droppedItem = null;\n  });\n});\n\ndropZones.forEach(dropZone => {\n  dropZone.addEventListener('dragenter', handlerDragenter);\n  dropZone.addEventListener('dragleave', handlerDragleave);\n  dropZone.addEventListener('dragover', handlerDragover);\n  dropZone.addEventListener('drop', handlerDrop);\n});\n\nfunction handlerDragstart(e) {\n  // e.dataTransfer.setData('dragItem', this.dataset.item);\n  this.classList.add('dragItem--active');\n  draggedItem = this;\n}\n\nfunction handlerDragend(e) {\n  this.classList.remove('dragItem--active');\n  draggedItem = null;\n}\n\nfunction handlerDrag(e) {\n  // console.log('drag');\n}\n\nfunction handlerDragenter(e) {\n  e.preventDefault();\n  this.classList.add('dropZone--active');\n  // droppeZone = this;\n}\n\nfunction handlerDragleave(e) {\n  this.classList.remove('dropZone--active');\n  // droppeZone - null\n}\n\nfunction handlerDragover(e) {\n  e.preventDefault();\n}\n\nfunction handlerDrop(e) {\n  // const dragFlag = e.dataTransfer.getData('dragItem');\n  // const dragItem = document.querySelector(`[data-item=\"${dragFlag}\"]`);\n\n  if (droppedItem) {\n    if (droppedItem.parentElement === draggedItem.parentElement) {\n      const children = Array.from(droppedItem.parentElement.children);\n      const draggedIndex = children.indexOf(draggedItem);\n      const droppedIndex = children.indexOf(droppedItem);\n\n      if (draggedIndex > droppedIndex) {\n        draggedItem.parentElement.insertBefore(draggedItem, droppedItem);\n      } else {\n        draggedItem.parentElement.insertBefore(draggedItem, droppedItem.nextElementSibling);\n      }\n    } else {\n      this.insertBefore(draggedItem, droppedItem);\n    }\n  } else {\n    this.append(draggedItem);\n  }\n}\n","import './sass/main.scss';\nimport './js/board-creation.js';\nimport './js/drag-n-drop.js';\n"]}